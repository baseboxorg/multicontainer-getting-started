#FROM resin/raspberry-pi2-debian:jessie
#FROM resin/rpi-raspbian:jessie
FROM resin/%%RESIN_MACHINE_NAME%%-debian:jessie
# Check to see if Raspbian needs updating, update it and cleanout the apt-get cache afterwards
# to keep image size down
#RUN [ "cross-build-start" ]

RUN apt-get update && apt-get install -y \
      build-essential \
      cmake \
      curl \
			ca-certificates \
      git

# psmisc for killall
# rest from install.sh:322
RUN apt-get update -y && \
    apt-get install -y psmisc dialog gpac motion zip libav-tools gstreamer1.0-tools && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*


# RUN apt-get update && apt-get dist-upgrade && apt-get clean

###### This section lifted from jritsema/rpi-node-piuserland. Original not used
# as it restricts to a specific version of raspbian - will revisit this later
# once I've established which version I can get this to work for!

# build raspberry pi userland tools from source (allows access to gpu, camera, etc.
RUN cd \
      && git clone --depth 1 https://github.com/raspberrypi/userland.git \
      && cd userland \
      && ./buildme

# add raspistill to path
ENV PATH /opt/vc/bin:/opt/vc/lib:$PATH

# update library path (to get past: raspistill: error while loading shared libraries: libmmal_core.so: cannot open shared object file: No such file or directory)
ADD 00-vmcs.conf /etc/ld.so.conf.d/
RUN ldconfig

###### End of Userland install section


# Install Apache
RUN apt-get update && apt-get install -y \
			apache2 \
			php5 \
			libapache2-mod-php5 \
		&& apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN cd \
      && git clone https://github.com/silvanmelchior/RPi_Cam_Web_Interface.git \
      /RPi_Cam_Web_Interface && \
       cd /RPi_Cam_Web_Interface && \
       chmod u+x *.sh

  # workarounds
RUN mkdir -p /run/shm/mjpeg && \
    sed -i '/sudoers/c\\# sudoers removed' /RPi_Cam_Web_Interface/install.sh && \
    sed -i '/\/opt\/vc\/bin\//c\\# raspimjpeg removed' /RPi_Cam_Web_Interface/install.sh && \
    sed -i 's/sudo //g' /RPi_Cam_Web_Interface/install.sh && \
    sed -i 's/sudo //g' /RPi_Cam_Web_Interface/start.sh && \
    sed -i 's/sudo //g' /RPi_Cam_Web_Interface/stop.sh && \
    sed -i 's/sudo //g' /RPi_Cam_Web_Interface/remove.sh && \
    sed -i 's/sudo //g' /RPi_Cam_Web_Interface/update.sh && \
    sed -i 's/sudo //g' /RPi_Cam_Web_Interface/RPi_Cam_Web_Interface_Installer.sh && \
    sed -i 's/sudo shutdown -r now//g' /RPi_Cam_Web_Interface/www/macros/error_hard.sh && \
    rm /RPi_Cam_Web_Interface/www/macros/error_hard.sh

# entry file
#COPY docker-setup.sh /RPi_Cam_Web_Interface
#RUN chmod u+x /RPi_Cam_Web_Interface/docker-setup.sh

#RUN /RPi_Cam_Web_Interface/docker-setup.sh

RUN mkdir -p /opt/vc/bin && \
    cp /RPi_Cam_Web_Interface/bin/raspimjpeg /opt/vc/bin/ && \
    chmod 755 /opt/vc/bin/raspimjpeg && \
    sudo ln -s /opt/vc/bin/raspimjpeg /usr/bin/raspimjpeg

# application config, doesnt need modifying
COPY config.txt ./RPi_Cam_Web_Interface/

# run install in quiet mode
RUN /RPi_Cam_Web_Interface/install.sh

# entry file
#COPY docker-entry.sh ./
#RUN chmod u+x docker-entry.sh && \
#    ln docker-entry.sh /usr/local/bin/rpi-cam-web

# For docker hub downloads
RUN cp /RPi_Cam_Web_Interface/bin/raspimjpeg /opt/vc/bin/ && \
    chmod 755 /opt/vc/bin/raspimjpeg


COPY entrypoint.sh /RPi_Cam_Web_Interface/entrypoint.sh

RUN chmod u+x entrypoint.sh

COPY . ./


# Needs to be run with --device /dev/vchiq for access to the camera device
ENTRYPOINT ["/RPi_Cam_Web_Interface/entrypoint.sh", "-D", "FOREGROUND"]
